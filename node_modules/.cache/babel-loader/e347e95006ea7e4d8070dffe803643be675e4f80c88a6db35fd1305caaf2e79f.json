{"ast":null,"code":"import React__default from 'react';\nimport HeroSliderModuleCss from './HeroSlider.module.css.js';\nimport Buttons from './components/Buttons/index.js';\nimport { SettingsProvider, useSettings } from './modules/Settings.js';\nimport { AnimationsProvider, useAnimations } from './modules/Animations.js';\nimport { ControllerProvider, useController } from './modules/Controller.js';\nimport { LayoutProvider, useLayout } from './modules/Layout.js';\nimport { AccessabilityProvider, useAccessability } from './modules/Accessability.js';\nimport { AutoplayProvider, useAutoplay } from './modules/Autoplay.js';\nimport { ManagerProvider } from './modules/Manager.js';\nimport { IntersectionObserverProvider, useIntersectionObserver } from './modules/IntersectionObserver.js';\nimport { composeCssClasses } from './utils/composeCssClasses.js';\nimport ConsoleLogger from './modules/ConsoleLogger.js';\nconst logger = ConsoleLogger.new();\nfunction Orchestrator(_ref) {\n  let {\n    className,\n    width = '100%',\n    height = '100vh',\n    style,\n    children\n  } = _ref;\n  logger.info('[Orchestrator] rerender');\n  const {\n    shouldDisplayButtons\n  } = useAccessability();\n  const {\n    sliderFadeInDuration,\n    navbarFadeInDuration,\n    navbarFadeInDelay\n  } = useAnimations();\n  const {\n    state: layout\n  } = useLayout();\n  const {\n    slidingDuration,\n    slidingDelay,\n    getSlidingCycleDuration\n  } = useController();\n  const settings = useSettings();\n  const {\n    debounce\n  } = useAutoplay();\n  const {\n    onTouchStartHandler,\n    onTouchMoveHandler,\n    onTouchEndHandler\n  } = useAccessability();\n  const {\n    elementObservedRef\n  } = useIntersectionObserver();\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--sliding-duration': `${slidingDuration}ms`,\n    '--sliding-delay': `${slidingDelay}ms`,\n    '--slide-transition-delay': `${getSlidingCycleDuration()}ms`,\n    '--slider-width': layout.width ? `${layout.width}px` : undefined,\n    '--slider-height': layout.height ? `${layout.height}px` : undefined,\n    '--slider-color': settings.sliderColor,\n    '--slider-fade-in-duration': `${sliderFadeInDuration}ms`,\n    '--nav-fade-in-duration': `${navbarFadeInDuration}ms`,\n    '--nav-fade-in-delay': `${navbarFadeInDelay}ms`,\n    '--nav-background-color': settings.navbarStyle ? settings.navbarStyle.color : undefined,\n    '--nav-active-color': settings.navbarStyle ? settings.navbarStyle.activeColor : undefined,\n    '--mask-duration': `${getSlidingCycleDuration()}ms`\n  };\n  return React__default.createElement(\"div\", {\n    className: composeCssClasses('hero-slider-root', className),\n    ref: elementObservedRef\n  }, React__default.createElement(\"div\", {\n    ref: layout.slider,\n    className: composeCssClasses('hero-slider-wrapper', HeroSliderModuleCss.Wrapper),\n    onTouchStart: onTouchStartHandler,\n    onTouchMove: onTouchMoveHandler,\n    onTouchEnd: onTouchEndHandler,\n    onMouseMoveCapture: debounce,\n    style: Object.assign(Object.assign(Object.assign({}, CSSVariables), style), {\n      width: width,\n      height: height\n    })\n  }, children, shouldDisplayButtons && React__default.createElement(Buttons, null)));\n}\nfunction HeroSlider(props) {\n  return React__default.createElement(LayoutProvider, null, React__default.createElement(ManagerProvider, {\n    manager: props.manager\n  }, React__default.createElement(SettingsProvider, {\n    settings: props.settings\n  }, React__default.createElement(ControllerProvider, {\n    controller: props.controller\n  }, React__default.createElement(AccessabilityProvider, {\n    accessability: props.accessability\n  }, React__default.createElement(AnimationsProvider, {\n    animations: props.animations\n  }, React__default.createElement(IntersectionObserverProvider, null, React__default.createElement(AutoplayProvider, {\n    autoplay: props.autoplay\n  }, React__default.createElement(Orchestrator, {\n    className: props.className,\n    width: props.width,\n    height: props.height,\n    style: props.style\n  }, props.children)))))))));\n}\nexport { HeroSlider as default };","map":{"version":3,"names":["logger","ConsoleLogger","new","Orchestrator","_ref","className","width","height","style","children","info","shouldDisplayButtons","useAccessability","sliderFadeInDuration","navbarFadeInDuration","navbarFadeInDelay","useAnimations","state","layout","useLayout","slidingDuration","slidingDelay","getSlidingCycleDuration","useController","settings","useSettings","debounce","useAutoplay","onTouchStartHandler","onTouchMoveHandler","onTouchEndHandler","elementObservedRef","useIntersectionObserver","CSSVariables","undefined","sliderColor","navbarStyle","color","activeColor","React__default","createElement","composeCssClasses","ref","slider","HeroSliderModuleCss","Wrapper","onTouchStart","onTouchMove","onTouchEnd","onMouseMoveCapture","Object","assign","Buttons","HeroSlider","props","LayoutProvider","ManagerProvider","manager","SettingsProvider","ControllerProvider","controller","AccessabilityProvider","accessability","AnimationsProvider","animations","IntersectionObserverProvider","AutoplayProvider","autoplay"],"sources":["D:\\eci\\web\\node_modules\\hero-slider\\src\\HeroSlider.tsx"],"sourcesContent":["import React from 'react';\nimport HeroSliderModuleCss from './HeroSlider.module.css';\nimport Buttons from './components/Buttons';\nimport {\n  SettingsProps,\n  SettingsProvider,\n  useSettings\n} from './modules/Settings';\nimport {\n  AnimationsProps,\n  AnimationsProvider,\n  useAnimations\n} from './modules/Animations';\nimport {\n  ControllerProps,\n  ControllerProvider,\n  useController\n} from './modules/Controller';\nimport { LayoutProvider, useLayout } from './modules/Layout';\nimport {\n  AccessabilityProps,\n  AccessabilityProvider,\n  useAccessability\n} from './modules/Accessability';\nimport {\n  AutoplayProps,\n  AutoplayProvider,\n  useAutoplay\n} from './modules/Autoplay';\nimport { ManagerProps, ManagerProvider } from './modules/Manager';\nimport {\n  IntersectionObserverProvider,\n  useIntersectionObserver\n} from './modules/IntersectionObserver';\nimport { composeCssClasses } from './utils/composeCssClasses';\nimport ConsoleLogger from './modules/ConsoleLogger';\n\nconst logger = ConsoleLogger.new();\n\n/**\n * `HeroSlider` props.\n */\nexport interface HeroSliderProps {\n  /**\n   * Slider className.\n   */\n  className?: React.HTMLProps<HTMLDivElement>['className'];\n  /**\n   * CSS property. Defines the width of the slider.\n   * @default '100%'\n   */\n  width?: React.CSSProperties['width'];\n  /**\n   * CSS property. Defines the height of the slider.\n   * @default '100vh'\n   */\n  height?: React.CSSProperties['height'];\n  /**\n   * Inline CSS styling.\n   */\n  style?: Omit<React.CSSProperties, 'width' | 'height'>;\n\n  // Modules\n  manager?: ManagerProps;\n  settings?: SettingsProps;\n  controller?: ControllerProps;\n  accessability?: AccessabilityProps;\n  animations?: AnimationsProps;\n  autoplay?: AutoplayProps;\n}\n\nfunction Orchestrator({\n  className,\n  width = '100%',\n  height = '100vh',\n  style,\n  children\n}: React.PropsWithChildren<\n  Pick<HeroSliderProps, 'className' | 'width' | 'height' | 'style'>\n>) {\n  logger.info('[Orchestrator] rerender');\n\n  const { shouldDisplayButtons } = useAccessability();\n  const { sliderFadeInDuration, navbarFadeInDuration, navbarFadeInDelay } =\n    useAnimations();\n  const { state: layout } = useLayout();\n  const { slidingDuration, slidingDelay, getSlidingCycleDuration } =\n    useController();\n  const settings = useSettings();\n  const { debounce } = useAutoplay();\n  const { onTouchStartHandler, onTouchMoveHandler, onTouchEndHandler } =\n    useAccessability();\n  const { elementObservedRef } = useIntersectionObserver();\n\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--sliding-duration': `${slidingDuration}ms`,\n    '--sliding-delay': `${slidingDelay}ms`,\n    '--slide-transition-delay': `${getSlidingCycleDuration()}ms`,\n    '--slider-width': layout.width ? `${layout.width}px` : undefined,\n    '--slider-height': layout.height ? `${layout.height}px` : undefined,\n    '--slider-color': settings.sliderColor,\n    '--slider-fade-in-duration': `${sliderFadeInDuration}ms`,\n    '--nav-fade-in-duration': `${navbarFadeInDuration}ms`,\n    '--nav-fade-in-delay': `${navbarFadeInDelay}ms`,\n    '--nav-background-color': settings.navbarStyle\n      ? settings.navbarStyle.color\n      : undefined,\n    '--nav-active-color': settings.navbarStyle\n      ? settings.navbarStyle.activeColor\n      : undefined,\n    '--mask-duration': `${getSlidingCycleDuration()}ms`\n  };\n\n  return (\n    <div\n      className={composeCssClasses('hero-slider-root', className)}\n      ref={elementObservedRef}\n    >\n      <div\n        ref={layout.slider}\n        className={composeCssClasses(\n          'hero-slider-wrapper',\n          HeroSliderModuleCss.Wrapper\n        )}\n        onTouchStart={onTouchStartHandler}\n        onTouchMove={onTouchMoveHandler}\n        onTouchEnd={onTouchEndHandler}\n        onMouseMoveCapture={debounce}\n        style={{\n          ...(CSSVariables as React.CSSProperties),\n          ...style,\n          width: width,\n          height: height\n        }}\n      >\n        {children}\n        {shouldDisplayButtons && <Buttons />}\n      </div>\n    </div>\n  );\n}\n\nexport default function HeroSlider(\n  props: React.PropsWithChildren<HeroSliderProps>\n) {\n  return (\n    <LayoutProvider>\n      <ManagerProvider manager={props.manager}>\n        <SettingsProvider settings={props.settings}>\n          <ControllerProvider controller={props.controller}>\n            <AccessabilityProvider accessability={props.accessability}>\n              <AnimationsProvider animations={props.animations}>\n                <IntersectionObserverProvider>\n                  <AutoplayProvider autoplay={props.autoplay}>\n                    <Orchestrator\n                      className={props.className}\n                      width={props.width}\n                      height={props.height}\n                      style={props.style}\n                    >\n                      {props.children}\n                    </Orchestrator>\n                  </AutoplayProvider>\n                </IntersectionObserverProvider>\n              </AnimationsProvider>\n            </AccessabilityProvider>\n          </ControllerProvider>\n        </SettingsProvider>\n      </ManagerProvider>\n    </LayoutProvider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}