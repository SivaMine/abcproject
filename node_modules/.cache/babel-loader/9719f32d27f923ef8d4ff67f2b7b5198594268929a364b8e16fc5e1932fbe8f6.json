{"ast":null,"code":"'use strict';\n\nmodule.exports = function (progressPercent) {\n  var _this = this,\n    activeChannel,\n    activeChannelPos,\n    i,\n    j;\n\n  // Loop through each colors of the active gradient\n  for (i = 0; i < this.activeColors.length; i++) {\n    // Generate RGBA colors\n    for (j = 0; j < 4; j++) {\n      // If color value [0-255] round to the integer,\n      // Else if opacity [0-1] round to 2 decimals\n      activeChannel = _this.activeColors[i][j] + (j !== 3 ? Math.ceil(_this.activeColorsDiff[i][j] / 100 * progressPercent) : Math.round(_this.activeColorsDiff[i][j] / 100 * progressPercent * 100) / 100);\n\n      // Prevent colors values from going < 0 & > 255\n      if (activeChannel <= 255 && activeChannel >= 0) {\n        _this.currentColors[i][j] = activeChannel;\n      }\n    }\n\n    // Generate gradient color position\n    activeChannelPos = parseFloat((_this.activeColorsPos[i] + _this.activeColorsPosDiff[i] / 100 * progressPercent).toFixed(4));\n    if (activeChannelPos <= 1 && activeChannelPos >= 0) {\n      _this.currentColorsPos[i] = activeChannelPos;\n    }\n  }\n  this.makeGradient();\n};","map":{"version":3,"names":["module","exports","progressPercent","_this","activeChannel","activeChannelPos","i","j","activeColors","length","Math","ceil","activeColorsDiff","round","currentColors","parseFloat","activeColorsPos","activeColorsPosDiff","toFixed","currentColorsPos","makeGradient"],"sources":["D:/eci/web/node_modules/granim/lib/refreshColorsAndPos.js"],"sourcesContent":["'use strict';\r\n\r\nmodule.exports = function(progressPercent) {\r\n\tvar _this = this, activeChannel, activeChannelPos, i, j;\r\n\r\n\t// Loop through each colors of the active gradient\r\n\tfor (i = 0; i < this.activeColors.length; i++) {\r\n\r\n\t\t// Generate RGBA colors\r\n\t\tfor (j = 0; j < 4; j++) {\r\n\t\t\t// If color value [0-255] round to the integer,\r\n\t\t\t// Else if opacity [0-1] round to 2 decimals\r\n\t\t\tactiveChannel = _this.activeColors[i][j] +\r\n\t\t\t\t(j !== 3\r\n\t\t\t\t\t? Math.ceil(_this.activeColorsDiff[i][j] / 100 * progressPercent)\r\n\t\t\t\t\t: Math.round((_this.activeColorsDiff[i][j] / 100 * progressPercent) * 100) / 100\r\n\t\t\t\t);\r\n\r\n\t\t\t// Prevent colors values from going < 0 & > 255\r\n\t\t\tif (activeChannel <= 255 && activeChannel >= 0) {\r\n\t\t\t\t_this.currentColors[i][j] = activeChannel;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Generate gradient color position\r\n\t\tactiveChannelPos = parseFloat((_this.activeColorsPos[i] +\r\n\t\t\t(_this.activeColorsPosDiff[i] / 100 * progressPercent)\r\n\t\t).toFixed(4));\r\n\r\n\t\tif (activeChannelPos <= 1 && activeChannelPos >= 0) {\r\n\t\t\t_this.currentColorsPos[i] = activeChannelPos;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.makeGradient();\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,UAASC,eAAe,EAAE;EAC1C,IAAIC,KAAK,GAAG,IAAI;IAAEC,aAAa;IAAEC,gBAAgB;IAAEC,CAAC;IAAEC,CAAC;;EAEvD;EACA,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACE,YAAY,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;IAE9C;IACA,KAAKC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACvB;MACA;MACAH,aAAa,GAAGD,KAAK,CAACK,YAAY,CAACF,CAAC,CAAC,CAACC,CAAC,CAAC,IACtCA,CAAC,KAAK,CAAC,GACLG,IAAI,CAACC,IAAI,CAACR,KAAK,CAACS,gBAAgB,CAACN,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG,GAAG,GAAGL,eAAe,CAAC,GAC/DQ,IAAI,CAACG,KAAK,CAAEV,KAAK,CAACS,gBAAgB,CAACN,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG,GAAG,GAAGL,eAAe,GAAI,GAAG,CAAC,GAAG,GAAG,CAChF;;MAEF;MACA,IAAIE,aAAa,IAAI,GAAG,IAAIA,aAAa,IAAI,CAAC,EAAE;QAC/CD,KAAK,CAACW,aAAa,CAACR,CAAC,CAAC,CAACC,CAAC,CAAC,GAAGH,aAAa;MAC1C;IACD;;IAEA;IACAC,gBAAgB,GAAGU,UAAU,CAAC,CAACZ,KAAK,CAACa,eAAe,CAACV,CAAC,CAAC,GACrDH,KAAK,CAACc,mBAAmB,CAACX,CAAC,CAAC,GAAG,GAAG,GAAGJ,eAAgB,EACrDgB,OAAO,CAAC,CAAC,CAAC,CAAC;IAEb,IAAIb,gBAAgB,IAAI,CAAC,IAAIA,gBAAgB,IAAI,CAAC,EAAE;MACnDF,KAAK,CAACgB,gBAAgB,CAACb,CAAC,CAAC,GAAGD,gBAAgB;IAC7C;EACD;EAEA,IAAI,CAACe,YAAY,CAAC,CAAC;AACpB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}